@use '../abstracts/colors' as *;

@use '../abstracts/fonts';
@use '../abstracts/colors';
@use 'sass:map';

/* 
Set the font family pairing 
===========================
!!!!! Use to change font family in any scss file
+++++++++++++++++++++++++++
===========================
*/

$available-font-maps:(
  1: fonts.$playfair-map,
  2: fonts.$lora-map,
  3: fonts.$oxygen-map,
  4: fonts.$arvo-map,
  5: fonts.$work-sans-map,
  6: fonts.$oswald-map,
  7: fonts.$unica-map,
  8: fonts.$vollkorn-map,
  9: fonts.$dosis-map,
  10: fonts.$estaban-map,
  11: fonts.$poppins-map,
  12: fonts.$fira-sans-map,
);
/* Select the font theme from the above map 1 - 12 */
$font-theme: 12;

/* Lora - good with yellow */
/* Oswald good with yellow */
/* Esteban good with yellow */


$use-map: map-get($map: $available-font-maps, $key: $font-theme);
$font-1: map-get($map: $use-map, $key: import1);
$font-2: map-get($map: $use-map, $key: import2); 
$big-font: map-get($map: $use-map, $key: heading );
$normal-font:map-get($map: $use-map, $key: body );
/* import only fonts that are used in the selected map */
@import url($font-1);
@import url($font-2);


/* Set bg, highligh and font color from color map */
$bg-clr: var(--h-clr-1);
$font-clr: var(--op-h-clr-1);
$h-font-clr: var(--op-h-clr-1);
$nav-overlay-clr: var(--op-h-overlay-7);
$o-white: var(--o-white-2);
$o-black: var(--o-black-5);
$body-font-size: 1.1em;
$body-lh: 1.6;
// $section-overlay-clr: rgba(255,255,255,.2);

/* Default Margin for elemets margin bottom */
$margin-b:0.8em;

/* extracts the font weight value from the all font weights map in _fonts */
@function setFontWeight ($font-w) {
  @if $font-w != null {
    @return map-get($map: fonts.$all-weights, $key: $font-w);
  }@else{
    @warn 'fontweight not found'
  }
};

/* Check what font weight is specified in the font map and assigns a weight value from a font weight map in _fonts */

@function checkMapFontWeight( $map, $target){
  $w:map-get($map: $map, $key: $target );
  @if $w == null {
    @return 'something went wrong';
  }@if $w != null {
    @return setFontWeight($w);
  }
};


/* 3.2 Letter spacing modifier */
@function letter-spacing (){
  @if(map-get($map: $use-map, $key: heading-ls) == null ){
    @return 50; 
  }@else{
    @return map-get($map: $use-map, $key: heading-ls);
  }
}

$ls: letter-spacing(); 
/* 3.2.1 Letter Spacing -map */
$heading-ls:(
  h1: 2.5em   / $ls,
  h2: 2.2em   / $ls,
  h3: 1.85em  / $ls,
  h4: 1.60em  / $ls, 
  h5: 1.35em  / $ls,
  h6: 1.15em  / $ls,
);

/* Set a font pairing map from fonts on the body */
body {
  font-family: map-get($map: $use-map, $key: body);
  font-weight: checkMapFontWeight($use-map, body-weight);
  font-style: map-get($map: $use-map, $key: #{b-s} );
  // background-color: $bg-clr;
  color: $font-clr;
  font-size: $body-font-size;
  line-height: $body-lh;
}

/* set a font for all headings from a font pairing map */
@each $heading in fonts.$heading {
  /* #{$heading} destrcutures $Heading map from _fonts */
  #{$heading} {
    font-family: map-get($map: $use-map, $key: heading);
    font-weight: checkMapFontWeight($use-map, h-w );
    font-style: map-get($map: $use-map, $key: #{h-s});
    color:$h-font-clr;
    font-size: map-get($map: fonts.$heading-size, $key: $heading );
    letter-spacing: map-get($map: $heading-ls, $key: #{$heading} );
  }
}

a {
  cursor: pointer;
  color: inherit;
  text-decoration: none;
}